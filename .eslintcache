[{"/run/media/gui/a142f01d-97b8-4d1c-9fd9-c84ccc5edf37/Dev/intelie-internship/challenge-chart-plot/src/App.tsx":"1","/run/media/gui/a142f01d-97b8-4d1c-9fd9-c84ccc5edf37/Dev/intelie-internship/challenge-chart-plot/src/index.tsx":"2","/run/media/gui/a142f01d-97b8-4d1c-9fd9-c84ccc5edf37/Dev/intelie-internship/challenge-chart-plot/src/components/AppBar/index.tsx":"3","/run/media/gui/a142f01d-97b8-4d1c-9fd9-c84ccc5edf37/Dev/intelie-internship/challenge-chart-plot/src/components/Button/index.tsx":"4","/run/media/gui/a142f01d-97b8-4d1c-9fd9-c84ccc5edf37/Dev/intelie-internship/challenge-chart-plot/src/components/Main/index.tsx":"5","/run/media/gui/a142f01d-97b8-4d1c-9fd9-c84ccc5edf37/Dev/intelie-internship/challenge-chart-plot/src/components/CodeEditor/index.tsx":"6","/run/media/gui/a142f01d-97b8-4d1c-9fd9-c84ccc5edf37/Dev/intelie-internship/challenge-chart-plot/src/components/ResizableContainer/index.tsx":"7","/run/media/gui/a142f01d-97b8-4d1c-9fd9-c84ccc5edf37/Dev/intelie-internship/challenge-chart-plot/src/components/Chart/index.tsx":"8","/run/media/gui/a142f01d-97b8-4d1c-9fd9-c84ccc5edf37/Dev/intelie-internship/challenge-chart-plot/src/components/Chart/options.tsx":"9","/run/media/gui/a142f01d-97b8-4d1c-9fd9-c84ccc5edf37/Dev/intelie-internship/challenge-chart-plot/src/components/Chart/utils.ts":"10"},{"size":154,"mtime":1607233324321,"results":"11","hashOfConfig":"12"},{"size":412,"mtime":1606438697997,"results":"13","hashOfConfig":"12"},{"size":220,"mtime":1606625778837,"results":"14","hashOfConfig":"12"},{"size":205,"mtime":1607554339043,"results":"15","hashOfConfig":"12"},{"size":2952,"mtime":1607555577413,"results":"16","hashOfConfig":"12"},{"size":774,"mtime":1607057295120,"results":"17","hashOfConfig":"12"},{"size":828,"mtime":1606782309044,"results":"18","hashOfConfig":"12"},{"size":445,"mtime":1607314679653,"results":"19","hashOfConfig":"12"},{"size":720,"mtime":1607553650920,"results":"20","hashOfConfig":"12"},{"size":2427,"mtime":1607556177267,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"y0nrit",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/run/media/gui/a142f01d-97b8-4d1c-9fd9-c84ccc5edf37/Dev/intelie-internship/challenge-chart-plot/src/App.tsx",[],["44","45"],"/run/media/gui/a142f01d-97b8-4d1c-9fd9-c84ccc5edf37/Dev/intelie-internship/challenge-chart-plot/src/index.tsx",[],"/run/media/gui/a142f01d-97b8-4d1c-9fd9-c84ccc5edf37/Dev/intelie-internship/challenge-chart-plot/src/components/AppBar/index.tsx",[],"/run/media/gui/a142f01d-97b8-4d1c-9fd9-c84ccc5edf37/Dev/intelie-internship/challenge-chart-plot/src/components/Button/index.tsx",[],"/run/media/gui/a142f01d-97b8-4d1c-9fd9-c84ccc5edf37/Dev/intelie-internship/challenge-chart-plot/src/components/Main/index.tsx",["46"],"import React, { useRef, useState, useLayoutEffect, useEffect } from \"react\";\nimport AppBar from \"../AppBar\";\nimport Button from \"../Button\";\nimport CodeEditor from \"../CodeEditor\";\nimport ResizableContainer from \"../ResizableContainer\";\nimport Chart from \"../Chart\";\nimport { options } from \"../Chart/options\";\nimport JSON5 from \"json5\";\nimport { shazam } from \"../Chart/utils\";\n\n\nexport default function Main() {\n  const refContainer = useRef<HTMLDivElement>(null);\n  const [height, setHeight] = useState(Number);\n  const [shouldUpdateHeight, setShouldUpdateHeight] = useState(false);\n  const [styleObject, setStyleObject] = useState({});\n  const [mouseY, setMouseY] = useState(0);\n  const [dataInput, setDataInput] = useState<String>();\n  const [splittedData, setSplittedData] = useState<string[]>();\n  const [parsedData, setParsedData] = useState<JSON[]>([]);\n  const [chartOptions, setChartOptions] = useState<any>(options);\n  const [shouldUpdateChart, setShouldUpdateChart] = useState<any>(false);\n\n  const handleMouseDown = () => setShouldUpdateHeight(true);\n  const handleMouseUp = () => setShouldUpdateHeight(false);\n\n  const handleMouseMove = (event: React.MouseEvent) => {\n    if (shouldUpdateHeight) {\n      setMouseY(event.movementY);\n      setHeight((prevHeight) => prevHeight - mouseY);\n      setStyleObject({ height });\n    }\n  };\n\n  const commitChart = () =>\n    dataInput ? setSplittedData(dataInput!.split(\"\\n\")) : null;\n\n  useEffect(() => {\n    if (splittedData) {\n      for (let line of splittedData)\n        try {\n          setParsedData((oldData) => [...oldData, JSON5.parse(line)]);\n        } catch (err) {\n          setParsedData([])\n          throw (`Erro ao processar o evento ${err}`);\n          \n        }\n    }\n  }, [splittedData]);\n\n  useEffect(() => {\n    if (parsedData.length > 0)\n      shazam(parsedData, options).then((ret) => setShouldUpdateChart(true));\n  }, [parsedData]);\n\n  useLayoutEffect(() => {\n    setChartOptions(options);\n    return function cleanup() {\n      setShouldUpdateChart(false);\n    };\n  }, [shouldUpdateChart]);\n\n  const handleDataInput = (value: String) => setDataInput(value);\n\n  useLayoutEffect(() => {\n    setHeight(refContainer.current!.clientHeight);\n  }, []);\n\n  return (\n    <div\n      className=\"container\"\n      onMouseMove={handleMouseMove}\n      onMouseUp={handleMouseUp}\n      style={{ cursor: shouldUpdateHeight ? \"ns-resize\" : \"default\" }}\n    >\n      <AppBar>Guilherme's Challenge</AppBar>\n      <CodeEditor change={handleDataInput} />\n      <ResizableContainer\n        domRef={refContainer}\n        mouseDown={handleMouseDown}\n        mouseUp={handleMouseUp}\n        styleObject={styleObject}\n      >\n        <Chart\n          mouseMove={handleMouseMove}\n          mouseUp={handleMouseUp}\n          data={parsedData}\n          options={chartOptions}\n        />\n      </ResizableContainer>\n      <AppBar>\n        <Button onClick={commitChart} />\n      </AppBar>\n    </div>\n  );\n}\n","/run/media/gui/a142f01d-97b8-4d1c-9fd9-c84ccc5edf37/Dev/intelie-internship/challenge-chart-plot/src/components/CodeEditor/index.tsx",[],"/run/media/gui/a142f01d-97b8-4d1c-9fd9-c84ccc5edf37/Dev/intelie-internship/challenge-chart-plot/src/components/ResizableContainer/index.tsx",[],"/run/media/gui/a142f01d-97b8-4d1c-9fd9-c84ccc5edf37/Dev/intelie-internship/challenge-chart-plot/src/components/Chart/index.tsx",[],"/run/media/gui/a142f01d-97b8-4d1c-9fd9-c84ccc5edf37/Dev/intelie-internship/challenge-chart-plot/src/components/Chart/options.tsx",[],"/run/media/gui/a142f01d-97b8-4d1c-9fd9-c84ccc5edf37/Dev/intelie-internship/challenge-chart-plot/src/components/Chart/utils.ts",["47"],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":45,"column":11,"nodeType":"54","messageId":"55","endLine":45,"endColumn":55},{"ruleId":"56","severity":1,"message":"57","line":72,"column":39,"nodeType":"58","messageId":"59","endLine":72,"endColumn":85},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'seriesObject'.","ArrowFunctionExpression","unsafeRefs","no-global-assign","no-unsafe-negation"]